@charset "UTF-8";
@font-face {
  font-family: "Larsseit";
  src: url("./../fonts/Larsseit.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: "Larsseit";
  src: url("./../fonts/Larsseit-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
}
@font-face {
  font-family: "Larsseit";
  src: url("./../fonts/Larsseit-Bold.woff2") format("woff2");
  font-weight: 700;
  font-display: swap;
}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  font-size: 100%;
}

body {
  font-family: "Larsseit", sans-serif;
  color: #fff;
}

.container {
  max-width: 1150px;
  margin: 0 auto;
  padding: 0 10px;
}

/* проблема переполнения */
/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
ul,
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  list-style-type: none;
  padding: 0;
  margin: 0;
  margin-block-start: 0;
  margin-block-end: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
  padding-inline-start: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
a,
img {
  display: block;
}

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none;
  color: inherit;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button {
  background-color: transparent;
  border: none;
  cursor: pointer;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.box__item--dark-blue {
  background-color: #22356F;
}
.box__subtitle {
  font-size: 32px;
  line-height: 34px;
  font-weight: 700;
  text-align: center;
  letter-spacing: -0.006em;
  position: relative;
}
.box__subtitle::after {
  content: "";
  display: block;
  width: 9px;
  height: 9px;
  position: absolute;
  top: 15px;
  left: 45px;
  border-radius: 50%;
  background-color: #E9B730;
}
.box__subtitle::before {
  content: "";
  display: block;
  width: 255px;
  height: 1px;
  position: absolute;
  top: -25px;
  left: 55px;
  background-color: #fff;
}

._active {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  visibility: visible;
  background-color: #12c37c;
  height: 100vh;
  width: 100%;
  transition: all 0.5s ease-in-out;
  z-index: 9999;
  transform: translateX(0);
  padding: 15% 0 0;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-direction: column-reverse;
}
@media only screen and (max-width: 280px) {
  ._active {
    padding: 40% 0;
  }
}

._active + .header__burger-btn .header__burger-line::before {
  transform: rotate(90deg) translateX(10px);
}

._active + .header__burger-btn .header__burger-line {
  width: 40px;
  transform: rotate(-45deg) translateX(-15px);
}

._active + .header__burger-btn .header__burger-line::after {
  transform: scale(0);
}

._lock {
  overflow: hidden;
}

.burger {
  transform: translateX(-200%);
}

.item--pink {
  background-color: #FFE2DE;
}
.item--green {
  background-color: #C4E769;
}
.item--blue {
  background-color: #0052C1;
}
.item--dark-blue {
  background-color: #22356F;
}
.item--light-blue {
  background-color: #62D0DF;
}
.item--light-purple {
  background-color: #DEE1FF;
}
.item--dark-purple {
  background-color: #8F00FF;
}

.link {
  font-size: 16px;
  line-height: 1.4;
  font-weight: 700;
  letter-spacing: 0.1em;
  margin-bottom: 30px;
}
.link--orange {
  color: #FAB63E;
}
.link--blue {
  color: #62D0DF;
}

.nav__list {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.nav__item + .nav__item {
  margin-left: 25px;
}
.nav__link {
  font-size: 14px;
  line-height: 16px;
  font-weight: false;
  text-align: false;
  color: #22356F;
}

.subtitle {
  font-size: 32px;
  line-height: 36px;
  font-weight: 700;
  text-align: center;
  letter-spacing: -0.006em;
  position: relative;
  display: inline-block;
}
.subtitle--dark-blue {
  color: #22356F;
}

.text {
  font-size: 24px;
  line-height: 44px;
  color: #22356F;
}
.text--blue {
  color: #6CD3E1;
}
.text--light {
  color: #FFF;
}
.text--orange {
  color: #FAB63E;
}
.text--bold {
  font-size: 24px;
  line-height: 40px;
  font-weight: 700;
}

.title {
  font-size: 48px;
  line-height: 1.1;
  letter-spacing: -0.035em;
  color: #22356F;
}
.title--light {
  color: #FFF;
}

.about {
  padding-top: 150px;
}
@media only screen and (max-width: 900px) {
  .about {
    padding-top: 70px;
  }
}
.about__wrapper {
  display: flex;
  margin: 0 auto;
}
@media only screen and (max-width: 900px) {
  .about__wrapper {
    flex-direction: column;
    align-items: center;
  }
}
.about__title {
  font-size: 16px;
  line-height: 23px;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  white-space: nowrap;
  margin-right: 182px;
}
@media only screen and (max-width: 900px) {
  .about__title {
    text-align: center;
    margin-bottom: 25px;
    margin-right: 0;
  }
}
.about__text {
  line-height: 37px;
  font-weight: 500;
  letter-spacing: 0.005em;
  max-width: 600px;
}
@media only screen and (max-width: 900px) {
  .about__text {
    text-align: center;
    font-size: 20px;
  }
}

.blog__grid {
  display: grid;
  grid-template-columns: 480px 1fr;
  grid-template-rows: 800px;
  gap: 95px;
}
@media only screen and (max-width: 1050px) {
  .blog__grid {
    grid-template-columns: 1fr;
    grid-template-rows: 600px 1fr;
    gap: 30px;
  }
}
.blog__img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  max-height: 800px;
}
.blog__inner {
  padding: 115px 10px 0;
  display: flex;
  flex-direction: column;
}
@media only screen and (max-width: 1050px) {
  .blog__inner {
    padding: 20px 10px;
    align-items: center;
  }
}
.blog__title {
  font-size: 16px;
  line-height: 0.75px;
  letter-spacing: 0.8px;
  margin-bottom: 225px;
}
@media only screen and (max-width: 1250px) {
  .blog__title {
    margin-bottom: 175px;
  }
}
@media only screen and (max-width: 1050px) {
  .blog__title {
    margin-bottom: 30px;
  }
}
.blog__text {
  font-size: 36px;
  line-height: 60px;
  font-weight: 700;
  letter-spacing: -0.4px;
  max-width: 676px;
  margin-bottom: 145px;
}
@media only screen and (max-width: 1250px) {
  .blog__text {
    margin-bottom: 100px;
  }
}
@media only screen and (max-width: 1050px) {
  .blog__text {
    margin-bottom: 30px;
    text-align: center;
  }
}
@media only screen and (max-width: 460px) {
  .blog__text {
    font-size: 30px;
  }
}

.contacts__grid {
  background-color: #22356F;
  display: grid;
  grid-template-columns: 1fr 480px;
  grid-template-rows: 800px;
  gap: 50px;
}
@media only screen and (max-width: 1100px) {
  .contacts__grid {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    gap: 20px;
  }
}
.contacts__wrapper {
  padding: 105px 0 30px 180px;
  display: flex;
  flex-direction: column;
}
@media only screen and (max-width: 1250px) {
  .contacts__wrapper {
    padding: 80px 0 30px 100px;
  }
}
@media only screen and (max-width: 1100px) {
  .contacts__wrapper {
    padding: 50px 10px;
    align-items: center;
  }
}
.contacts__title {
  font-size: 16px;
  line-height: 12px;
  letter-spacing: 0.45px;
  margin-bottom: 225px;
}
@media only screen and (max-width: 1250px) {
  .contacts__title {
    margin-bottom: 150px;
  }
}
@media only screen and (max-width: 1100px) {
  .contacts__title {
    margin-bottom: 100px;
  }
}
@media only screen and (max-width: 500px) {
  .contacts__title {
    font-size: 30px;
  }
}
.contacts__subtitlee {
  font-size: 64px;
  line-height: 93px;
  font-weight: 700;
  letter-spacing: -1px;
  margin-bottom: 50px;
}
@media only screen and (max-width: 1100px) {
  .contacts__subtitlee {
    margin-bottom: 30px;
  }
}
@media only screen and (max-width: 500px) {
  .contacts__subtitlee {
    font-size: 50px;
  }
}
@media only screen and (max-width: 360px) {
  .contacts__subtitlee {
    font-size: 35px;
  }
}
.contacts__text {
  font-size: 36px;
  line-height: 55px;
  letter-spacing: -0.2px;
  margin-bottom: 75px;
  max-width: 590px;
}
@media only screen and (max-width: 1100px) {
  .contacts__text {
    margin-bottom: 30px;
    text-align: center;
  }
}
@media only screen and (max-width: 500px) {
  .contacts__text {
    font-size: 30px;
  }
}
.contacts__img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  max-height: 800px;
}
@media only screen and (max-width: 1100px) {
  .contacts__img {
    display: none;
  }
}

.footer__top {
  display: grid;
  grid-template-columns: 570px 1fr;
  grid-template-rows: 380px;
}
@media only screen and (max-width: 1100px) {
  .footer__top {
    grid-template-columns: 1fr;
    grid-template-rows: 380px;
  }
}
.footer__img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  max-height: 380px;
}
.footer__row {
  display: flex;
  padding: 100px 0 0 68px;
}
@media only screen and (max-width: 1180px) {
  .footer__row {
    padding-left: 30px;
  }
}
@media only screen and (max-width: 1100px) {
  .footer__row {
    justify-content: center;
    margin-bottom: 50px;
    padding-left: 0;
  }
}
@media only screen and (max-width: 480px) {
  .footer__row {
    flex-direction: column;
    align-items: center;
    padding-top: 50px;
  }
}
.footer__column {
  max-width: 175px;
  display: flex;
  flex-direction: column;
}
@media only screen and (max-width: 480px) {
  .footer__column {
    align-items: center;
  }
}
.footer__column + .footer__column {
  margin-left: 90px;
}
@media only screen and (max-width: 1260px) {
  .footer__column + .footer__column {
    margin-left: 50px;
  }
}
@media only screen and (max-width: 1180px) {
  .footer__column + .footer__column {
    margin-left: 20px;
  }
}
@media only screen and (max-width: 1100px) {
  .footer__column + .footer__column {
    margin-left: 90px;
  }
}
@media only screen and (max-width: 650px) {
  .footer__column + .footer__column {
    margin-left: 50px;
  }
}
@media only screen and (max-width: 550px) {
  .footer__column + .footer__column {
    margin-left: 20px;
  }
}
@media only screen and (max-width: 480px) {
  .footer__column + .footer__column {
    margin-left: 0;
    margin-top: 20px;
  }
}
.footer__title {
  font-size: 14px;
  line-height: 0.8;
  letter-spacing: -0.006em;
  text-transform: uppercase;
  color: #22356F;
  margin-bottom: 50px;
}
@media only screen and (max-width: 480px) {
  .footer__title {
    margin-bottom: 25px;
  }
}
.footer__text {
  font-size: 14px;
  line-height: 1.6;
  letter-spacing: -0.006em;
  color: rgba(34, 53, 111, 0.5);
}
.footer__text--margin {
  margin-bottom: 30px;
}
.footer__tel {
  font-size: 14px;
  line-height: 1.6;
  letter-spacing: -0.006em;
  color: rgba(34, 53, 111, 0.5);
  margin-bottom: 10px;
}
.footer__email {
  font-size: 14px;
  line-height: 0.8;
  letter-spacing: -0.006em;
  color: #22356F;
}
.footer__bottom {
  height: 80px;
  background-color: #62D0DF;
  padding-left: 200px;
  display: flex;
  align-items: center;
}
@media only screen and (max-width: 480px) {
  .footer__bottom {
    padding-left: 0;
    justify-content: center;
  }
}
.footer__small {
  font-size: 14px;
  line-height: 0.8;
  letter-spacing: -0.006em;
  position: relative;
}
.footer__small::after {
  content: "©";
  display: block;
  position: absolute;
  top: 3px;
  left: -20px;
}

.header {
  background-color: #F4F9E2;
  background-image: linear-gradient(90deg, #F4F9E2 65%, #fff 65%, #fff 65%, #fff 100%);
  min-width: 100%;
  min-height: 100vh;
  position: relative;
  padding: 0 0 0 50px;
  overflow: hidden;
}
.header::before {
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  background-image: url("@img/icons/headerBackground.svg");
  content: "";
  display: block;
  width: 743px;
  height: 824px;
  position: absolute;
  top: -50px;
  right: -50px;
}
.header__top {
  padding: 20px 0px 0px 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 165px;
}
@media only screen and (max-width: 1120px) {
  .header__top {
    justify-content: space-around;
  }
}
.header__subtitle {
  font-size: 24px;
  line-height: 1.9;
  font-weight: 500;
  letter-spacing: -0.035em;
  color: #62D0DF;
  margin-bottom: 30px;
}
.header__subtitle--up {
  margin-bottom: 0;
  position: relative;
  z-index: 1;
}
@media only screen and (max-width: 1120px) {
  .header__nav {
    display: none;
  }
}
.header__btn {
  display: flex;
  align-items: center;
  width: 150px;
  height: 50px;
  font-size: 14px;
  line-height: 1.15;
  background-color: #62D0DF;
  z-index: 10;
  letter-spacing: -0.02em;
  padding-left: 30px;
  border-radius: 50px;
}
.header__wrapper {
  display: flex;
  position: relative;
  z-index: 200;
}
.header__inner {
  display: flex;
  flex-direction: column;
  max-width: 490px;
}
.header__title {
  text-transform: uppercase;
  color: #22356F;
  margin-bottom: 68px;
}
.header__text {
  margin-bottom: 55px;
}
.header__wrap {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  max-width: 315px;
}
.header__link {
  font-size: 16px;
  line-height: 1.4;
  text-align: center;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}
.header__link--bg-orange {
  display: block;
  width: 150px;
  height: 50px;
  background: #F9B640;
  display: flex;
  justify-content: center;
  align-items: center;
}
.header__link--orange {
  color: #FAB63E;
}
.header__img {
  width: 743px;
  height: 824px;
  position: absolute;
  top: 0;
  right: 0;
}
.header__img:first-child {
  z-index: 1;
}
@media only screen and (max-width: 1120px) {
  .header__burger-line {
    width: 35px;
    height: 2px;
    background-color: #d6d6d0;
    position: relative;
    display: block;
    transition: all 0.7s ease-in-out;
  }
  .header__burger-line::after, .header__burger-line::before {
    content: "";
    display: block;
    width: 35px;
    height: 2px;
    position: absolute;
    left: 0;
    background-color: #d6d6d0;
  }
  .header__burger-line::after {
    top: 10px;
    width: 30px;
  }
  .header__burger-line::before {
    top: -10px;
    width: 40px;
  }
}
.header__burger-btn {
  position: fixed;
  top: 15px;
  left: 25px;
  width: 50px;
  height: 50px;
  display: none;
  z-index: 1;
}
@media only screen and (max-width: 1120px) {
  .header__burger-btn {
    display: block;
  }
}

.home {
  background-color: #62D0DF;
}
.home__grid {
  display: grid;
  grid-template-columns: 1fr 525px;
  grid-template-rows: minmax(0, 604px);
}
@media only screen and (max-width: 920px) {
  .home__grid {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(auto-fill, minmax(100px, 1fr));
  }
}
.home__inner {
  max-width: 575px;
  display: flex;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  padding: 80px 10px 0;
}
@media only screen and (max-width: 920px) {
  .home__inner {
    padding: 20px 10px;
  }
}
.home__title {
  font-size: 36px;
  line-height: 27px;
  letter-spacing: -0.006em;
  margin-bottom: 90px;
  text-transform: capitalize;
}
@media only screen and (max-width: 920px) {
  .home__title {
    text-align: center;
    margin-bottom: 20px;
    font-size: 32px;
  }
}
.home__text {
  font-size: 20px;
  line-height: 35px;
}
@media only screen and (max-width: 920px) {
  .home__text {
    text-align: center;
    font-size: 18px;
  }
}
.home__img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  max-height: 604px;
}

.services {
  margin: 0 auto;
  padding: 70px 0 60px;
}
.services__title {
  font-size: 16px;
  line-height: 1.2;
  text-align: center;
  color: rgba(34, 53, 111, 0.502);
  margin-bottom: 24px;
  letter-spacing: 0.06em;
}
.services__block {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 360px;
  margin-bottom: 120px;
}
@media only screen and (max-width: 1050px) {
  .services__block {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 360px);
  }
}
@media only screen and (max-width: 576px) {
  .services__block {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4, 360px);
  }
}
.services__item {
  padding: 95px 10px 0;
  position: relative;
  display: flex;
  justify-content: center;
}
.services__item::before {
  content: "";
  display: block;
  width: 80%;
  height: 1px;
  position: absolute;
  top: 19%;
  left: 14%;
  background-color: #fff;
}
.services__subtitle::before {
  content: "";
  display: block;
  width: 9px;
  height: 9px;
  position: absolute;
  top: 4%;
  left: -13%;
  border-radius: 50%;
  background-color: #E9B730;
}
.services__box {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 480px);
}
@media only screen and (max-width: 1050px) {
  .services__box {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 480px);
  }
}
@media only screen and (max-width: 576px) {
  .services__box {
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: repeat(6, 480px);
  }
}
.services__box-subtitle {
  font-size: 32px;
  line-height: 34px;
  font-weight: 700;
  letter-spacing: -0.006em;
  position: relative;
}
.services__box-subtitle::before {
  content: "";
  display: block;
  width: 12px;
  height: 12px;
  position: absolute;
  top: 3%;
  left: -25%;
  border-radius: 50%;
  background-color: #E9B730;
}
.services__box-item {
  padding: 130px 10px 0 104px;
  position: relative;
  display: flex;
}
.services__box-item::before {
  content: "";
  display: block;
  width: 71%;
  height: 2px;
  position: absolute;
  top: 19%;
  left: 14%;
  background-color: #fff;
}
.services__info {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 240px);
}
@media only screen and (max-width: 1100px) {
  .services__info {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
  }
}
.services__info-item {
  padding: 75px 10px 0 40px;
  margin: 0 auto;
}
.services__info-subtitle {
  font-size: 28px;
  line-height: 33px;
  letter-spacing: -1.6px;
}
.services__info-text {
  font-size: 16px;
  line-height: 25px;
  letter-spacing: -0.03em;
  color: rgba(34, 53, 111, 0.5);
  margin-top: 30px;
  max-width: 300px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
